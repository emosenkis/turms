"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7885],{3905:function(e,r,n){n.d(r,{Zo:function(){return c},kt:function(){return d}});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=t.createContext({}),u=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},c=function(e){var r=u(e.components);return t.createElement(s.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=u(n),d=o,y=f["".concat(s,".").concat(d)]||f[d]||p[d]||i;return n?t.createElement(y,a(a({ref:r},c),{},{components:n})):t.createElement(y,a({ref:r},c))}));function d(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},85749:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return f}});var t=n(87462),o=n(63366),i=(n(67294),n(3905)),a=["components"],l={sidebar_position:5,sidebar_label:"Operations Funcs"},s="Strawberry",u={unversionedId:"plugins/strawberry",id:"plugins/strawberry",title:"Strawberry",description:"This plugin generates a fully fledged strawberry schema from your",source:"@site/docs/plugins/strawberry.md",sourceDirName:"plugins",slug:"/plugins/strawberry",permalink:"/turms/docs/plugins/strawberry",editUrl:"https://github.com/jhnnsrs/turms/edit/master/website/docs/plugins/strawberry.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"Operations Funcs"},sidebar:"tutorialSidebar",previous:{title:"Operations Funcs",permalink:"/turms/docs/plugins/funcs"},next:{title:"config",permalink:"/turms/docs/reference/config"}},c=[{value:"Default Configuration",id:"default-configuration",children:[],level:3},{value:"Example Config",id:"example-config",children:[],level:3}],p={toc:c};function f(e){var r=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"strawberry"},"Strawberry"),(0,i.kt)("p",null,"This plugin generates a fully fledged strawberry schema from your\nSDL schema."),(0,i.kt)("p",null,"It is best used in combination with the MergeProcessor to enable only\nupdating type definitions and not overwriting added functionatly (like\nresolvers)"),(0,i.kt)("h3",{id:"default-configuration"},"Default Configuration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'project:\n  default:\n    schema: ...\n    extensions:\n      turms:\n        plugins:\n          - type: turms.plugins.strawberry.StrawberryPlugin\n            prepend_sync: ""\n            prepend_async: "a"\n            collapse_lonely: True #bool = True Collapses one operation query and return the collapsed type\n            global_args: #List[Arg] = [] global additional arguments for the functions to be called\n            global_kwargs: #List[Kwarg] = []\n            definitions: #List[FunctionDefinition] = []\n')),(0,i.kt)("p",null,"Definitions Sepcify a strategy to generate a proxy function"),(0,i.kt)("h3",{id:"example-config"},"Example Config"))}f.isMDXComponent=!0}}]);