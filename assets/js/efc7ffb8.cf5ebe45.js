"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7620],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return b}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),i=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},p=function(e){var r=i(e.components);return n.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),f=i(t),b=o,d=f["".concat(l,".").concat(b)]||f[b]||u[b]||c;return t?n.createElement(d,s(s({ref:r},p),{},{components:t})):n.createElement(d,s({ref:r},p))}));function b(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var c=t.length,s=new Array(c);s[0]=f;var a={};for(var l in r)hasOwnProperty.call(r,l)&&(a[l]=r[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var i=2;i<c;i++)s[i]=t[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7697:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return i},toc:function(){return p},default:function(){return f}});var n=t(87462),o=t(63366),c=(t(67294),t(3905)),s=["components"],a={sidebar_label:"black",title:"processors.black"},l=void 0,i={unversionedId:"reference/processors/black",id:"reference/processors/black",title:"processors.black",description:"BlackProcessor Objects",source:"@site/docs/reference/processors/black.md",sourceDirName:"reference/processors",slug:"/reference/processors/black",permalink:"/turms/docs/reference/processors/black",editUrl:"https://github.com/jhnnsrs/turms/edit/master/website/docs/reference/processors/black.md",tags:[],version:"current",frontMatter:{sidebar_label:"black",title:"processors.black"},sidebar:"tutorialSidebar",previous:{title:"base",permalink:"/turms/docs/reference/processors/base"},next:{title:"isort",permalink:"/turms/docs/reference/processors/isort"}},p=[{value:"BlackProcessor Objects",id:"blackprocessor-objects",children:[],level:2}],u={toc:p};function f(e){var r=e.components,t=(0,o.Z)(e,s);return(0,c.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"blackprocessor-objects"},"BlackProcessor Objects"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"class BlackProcessor(Processor)\n")),(0,c.kt)("p",null,"A processor that uses black to format the generated python code"),(0,c.kt)("p",null,"Black is a code formatter that is used to enforce a consistent style on the generated python code.\nIt needs to be seperately installed via ","'","pip install black","'","."))}f.isMDXComponent=!0}}]);