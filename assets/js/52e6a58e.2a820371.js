"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2241],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(t),m=a,g=p["".concat(l,".").concat(m)]||p[m]||f[m]||i;return t?r.createElement(g,s(s({ref:n},u),{},{components:t})):r.createElement(g,s({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=p;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},70286:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=t(87462),a=t(63366),i=(t(67294),t(3905)),s=["components"],o={sidebar_label:"fragments",title:"plugins.fragments"},l=void 0,c={unversionedId:"reference/plugins/fragments",id:"reference/plugins/fragments",title:"plugins.fragments",description:"FragmentsPlugin Objects",source:"@site/docs/reference/plugins/fragments.md",sourceDirName:"reference/plugins",slug:"/reference/plugins/fragments",permalink:"/turms/docs/reference/plugins/fragments",editUrl:"https://github.com/jhnnsrs/turms/edit/master/website/docs/reference/plugins/fragments.md",tags:[],version:"current",frontMatter:{sidebar_label:"fragments",title:"plugins.fragments"},sidebar:"tutorialSidebar",previous:{title:"enums",permalink:"/turms/docs/reference/plugins/enums"},next:{title:"funcs",permalink:"/turms/docs/reference/plugins/funcs"}},u=[{value:"FragmentsPlugin Objects",id:"fragmentsplugin-objects",children:[],level:2}],f={toc:u};function p(e){var n=e.components,t=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"fragmentsplugin-objects"},"FragmentsPlugin Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class FragmentsPlugin(Plugin)\n")),(0,i.kt)("p",null,"Plugin for generating fragments from\ndocuments"),(0,i.kt)("p",null,"The fragments plugin will generate classes for each fragment. It loads the documents,\nscans for fragments and generates the classes."),(0,i.kt)("p",null,"If encountering a fragment on an interface it will generate a BASE class for that interface\nand then generate a class for each type referenced in the fragment. They will all inherit\nfrom the base class. The true type will be determined at runtime as all of the potential subtypes\nwill be in the same union."))}p.isMDXComponent=!0}}]);