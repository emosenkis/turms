(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3856],{53610:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return d},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return g}});var t=r(87462),s=r(63366),i=(r(67294),r(3905)),o=r(93456),a=["components"],d={sidebar_position:1,sidebar_label:"General design",title:"General design"},c=void 0,l={unversionedId:"design/intro",id:"design/intro",title:"General design",description:"Turm uses a modular design to ensure a wide range of applications of graphql",source:"@site/docs/design/intro.md",sourceDirName:"design",slug:"/design/intro",permalink:"/turms/docs/design/intro",editUrl:"https://github.com/jhnnsrs/turms/edit/master/website/docs/design/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"General design",title:"General design"},sidebar:"tutorialSidebar",previous:{title:"Strawberry (Schema first)",permalink:"/turms/docs/usecases/schema/strawberry"},next:{title:"Parsers",permalink:"/turms/docs/design/parsers"}},u=[],p={toc:u};function g(e){var n=e.components,r=(0,s.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Turm uses a modular design to ensure a wide range of applications of graphql\ncodegeneration. This means that you can freely choose to add and alter some\nbehaviour of the code generation library. This is done with the help of plugins, parsers and processors:"),(0,i.kt)(o.Mermaid,{chart:"flowchart LR;\n    id0(Documents)--\x3e|gql&schema|id1(Plugin)\n    id0(Documents)--\x3e|gql&schema|id2(Plugin)\n    id0(Documents)--\x3e|gql&schema|id3(Plugin)\n    id1(Plugin)--\x3e|python.AST|id50(Appender)\n    id2(Plugin)--\x3e|python.AST|id50(Appender)\n    id3(Plugin)--\x3e|python.AST|id50(Appender)\n    id50(Appender)--\x3e|python.AST|id51(Parser A)\n    id51(Parser A)--\x3e|python.AST|id52(Parser B)\n    id52(Parser B)--\x3e|str|id61(Processor)\n    id61(Processor)--\x3e|str|id62(Processor)\n    id62(Processor)--\x3eid100(generated.py)",mdxType:"Mermaid"}),(0,i.kt)("p",null,"Turms loads or introspects your schema, parses your configuration and loads the\nplugins sequentially, causing them to generate their part of the python AST,\nconcats these together, pipes them to parsers to manipulate the ast.Tree and unparsers\nthis to a codestring that can then be processed by processors (like black or isort or merge),\nand are then written to file."),(0,i.kt)("p",null,"If you wish to enforce a specific naming style (like snakecasing, pascal case gql)\nyou can do so by specifying stylers. Plugins will then try to resolve a field or classname\naccording to this style."))}g.isMDXComponent=!0},11748:function(e,n,r){var t={"./locale":89234,"./locale.js":89234};function s(e){var n=i(e);return r(n)}function i(e){if(!r.o(t,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t[e]}s.keys=function(){return Object.keys(t)},s.resolve=i,e.exports=s,s.id=11748}}]);