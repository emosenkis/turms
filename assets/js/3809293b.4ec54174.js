"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7885],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return f}});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=n.createContext({}),l=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(u.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=l(t),f=a,b=d["".concat(u,".").concat(f)]||d[f]||p[f]||i;return t?n.createElement(b,s(s({ref:r},c),{},{components:t})):n.createElement(b,s({ref:r},c))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=d;var o={};for(var u in r)hasOwnProperty.call(r,u)&&(o[u]=r[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},85749:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var n=t(87462),a=t(63366),i=(t(67294),t(3905)),s=["components"],o={sidebar_position:5,sidebar_label:"Strawberry Schema"},u="Strawberry",l={unversionedId:"plugins/strawberry",id:"plugins/strawberry",title:"Strawberry",description:"This plugin generates a fully fledged strawberry schema from your",source:"@site/docs/plugins/strawberry.md",sourceDirName:"plugins",slug:"/plugins/strawberry",permalink:"/turms/docs/plugins/strawberry",editUrl:"https://github.com/jhnnsrs/turms/edit/master/website/docs/plugins/strawberry.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"Strawberry Schema"},sidebar:"tutorialSidebar",previous:{title:"Operations Funcs",permalink:"/turms/docs/plugins/funcs"},next:{title:"Config",permalink:"/turms/docs/config"}},c=[{value:"Default Configuration",id:"default-configuration",children:[],level:3}],p={toc:c};function d(e){var r=e.components,t=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"strawberry"},"Strawberry"),(0,i.kt)("p",null,"This plugin generates a fully fledged strawberry schema from your\nSDL schema."),(0,i.kt)("h3",{id:"default-configuration"},"Default Configuration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'project:\n  default:\n    schema: ...\n    extensions:\n      turms:\n        plugins:\n          - type: turms.plugins.strawberry.StrawberryPlugin\n            generate_directives: True # should we generate directives\n            generate_scalars: True # should we generate scalars\n            builtin_directives: # directives that are builtin and will not be generated through strawberry.directive\n               - "include"\n               - "skip"\n               - "deprecated"\n               - "specifiedBy"\n            builtin_scalars:  #scalars that will not be created through stawberry.scalar\n              - "String",\n              - "Boolean"\n              - "DateTime"\n              - "Int"\n              - "Float"\n              - "ID"\n            generate_enums: True # should we generate enums\n            generate_types: True # should we generate types (objects, queries, mutations, subscriptiosn)\n            generate_inputs: True # should we generate input types\n            types_bases: [] # additional type bases\n            inputtype_bases: [] # additional inputtype bases\n            skip_underscore: False # skip generated underscored types\n            skip_double_underscore: True # skip generatind double underscored types\n')))}d.isMDXComponent=!0}}]);