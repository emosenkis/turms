"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3987],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return b}});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=n.createContext({}),l=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(i.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=l(t),b=a,d=f["".concat(i,".").concat(b)]||f[b]||u[b]||o;return t?n.createElement(d,s(s({ref:r},p),{},{components:t})):n.createElement(d,s({ref:r},p))}));function b(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=f;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var l=2;l<o;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},99121:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return f}});var n=t(87462),a=t(63366),o=(t(67294),t(3905)),s=["components"],c={sidebar_label:"base",title:"parsers.base"},i=void 0,l={unversionedId:"reference/parsers/base",id:"reference/parsers/base",title:"parsers.base",description:"Parser Objects",source:"@site/docs/reference/parsers/base.md",sourceDirName:"reference/parsers",slug:"/reference/parsers/base",permalink:"/turms/docs/reference/parsers/base",editUrl:"https://github.com/jhnnsrs/turms/edit/master/website/docs/reference/parsers/base.md",tags:[],version:"current",frontMatter:{sidebar_label:"base",title:"parsers.base"},sidebar:"tutorialSidebar",previous:{title:"watch",permalink:"/turms/docs/reference/cli/watch"},next:{title:"polyfill",permalink:"/turms/docs/reference/parsers/polyfill"}},p=[{value:"Parser Objects",id:"parser-objects",children:[],level:2}],u={toc:p};function f(e){var r=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"parser-objects"},"Parser Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Parser(BaseModel)\n")),(0,o.kt)("p",null,"Base class for all parsers"),(0,o.kt)("p",null,"Parsers are used to parse the AST of the generated python code. They can be used to\nmodify the AST before it is written to the file."))}f.isMDXComponent=!0}}]);