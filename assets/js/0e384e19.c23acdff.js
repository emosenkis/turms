(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9671],{59881:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var i=n(87462),r=n(63366),s=(n(67294),n(3905)),a=n(93456),o=["components"],l={sidebar_position:1,sidebar_label:"Introduction"},u="Quick Start",c={unversionedId:"intro",id:"intro",title:"Quick Start",description:"Let's discover Turms in less than 5 minutes.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/turms/docs/intro",editUrl:"https://github.com/jhnnsrs/turms/edit/master/website/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Introduction"},sidebar:"tutorialSidebar",next:{title:"Config",permalink:"/turms/docs/config"}},p=[{value:"Inspiration",id:"inspiration",children:[],level:3},{value:"Installation",id:"installation",children:[],level:3},{value:"Configuration",id:"configuration",children:[],level:3},{value:"Generation",id:"generation",children:[{value:"Generation Flow",id:"generation-flow",children:[],level:3}],level:2}],d={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"quick-start"},"Quick Start"),(0,s.kt)("p",null,"Let's discover ",(0,s.kt)("strong",{parentName:"p"},"Turms in less than 5 minutes"),"."),(0,s.kt)("h3",{id:"inspiration"},"Inspiration"),(0,s.kt)("p",null,"Turms is a graphql-codegen inspired code generator for pyhton that generates fully typed and\nserialized operations from your graphql schema. Just define your query in standard graphql syntax\nand let turms create fully typed queries/mutation and subscriptions, that you can use in your favourite\nIDE."),(0,s.kt)("h3",{id:"installation"},"Installation"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"pip install turms\n")),(0,s.kt)("p",null,"turms has no dependencies to itself (besides pydantic) in its generated code, so its recommended to install\nturms as a development dependency."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"poetry add -D turms\n")),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"As of now turms only supports python 3.9 and higher (3.7 and 3.8 are in the making)"))),(0,s.kt)("h3",{id:"configuration"},"Configuration"),(0,s.kt)("p",null,"Turms relies on and complies with ",(0,s.kt)("a",{parentName:"p",href:"https://www.graphql-config.com/docs/user/user-introduction"},"graphql-config")," and searches\nyour current working dir for the graphql-config file."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"projects:\n  default:\n    schema: http://api.spacex.land/graphql/\n    documents: graphql/**.graphql\n    extensions:\n      turms: # path for configuration for turms\n        out_dir: examples/api\n        plugins:\n          - type: turms.plugins.enums.EnumsPlugin\n          - type: turms.plugins.inputs.InputsPlugin\n          - type: turms.plugins.fragments.FragmentsPlugin\n          - type: turms.plugins.operation.OperationsPlugin\n          - type: turms.plugins.funcs.OperationsFuncPlugin\n        processors:\n          - type: turms.processor.black.BlackProcessor\n          - type: turms.processor.isort.IsortProcessor\n        scalar_definitions:\n          uuid: str\n          timestamptz: str\n          Date: str\n")),(0,s.kt)("p",null,"By default turms requires the projects tree structure, to support multiple schemas within a same project."),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Each plugin as its own scope of configuration, that you can consult"))),(0,s.kt)("h2",{id:"generation"},"Generation"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"turms gen\n")),(0,s.kt)("p",null,"Will generate python code according to the schema and your documents."),(0,s.kt)("h3",{id:"generation-flow"},"Generation Flow"),(0,s.kt)("p",null,"Turms generates code with the help of plugins, parsers and processors:"),(0,s.kt)(a.Mermaid,{chart:"flowchart LR;\n    id0(Documents)--\x3e|gql&schema|id1(Plugin)\n    id0(Documents)--\x3e|gql&schema|id2(Plugin)\n    id0(Documents)--\x3e|gql&schema|id3(Plugin)\n    id1(Plugin)--\x3e|python.AST|id50(Appender)\n    id2(Plugin)--\x3e|python.AST|id50(Appender)\n    id3(Plugin)--\x3e|python.AST|id50(Appender)\n    id50(Appender)--\x3e|python.AST|id51(Parser A)\n    id51(Parser A)--\x3e|python.AST|id52(Parser B)\n    id52(Parser B)--\x3e|str|id61(Processor)\n    id61(Processor)--\x3e|str|id62(Processor)\n    id62(Processor)--\x3eid100(generated.py)",mdxType:"Mermaid"}),(0,s.kt)("p",null,"Turms loads or introspects your schema, parses your configuration and loads the\nplugins sequentially, causing them to generate their part of the python AST,\nconcats these together, pipes them to parsers to manipulate the ast.Trre and unparsers\nthis to a codestring that can then be processed by tools like black or isort, and are then written to file."),(0,s.kt)("p",null,"If you wish to enforce a specific naming style (like snakecasing, pascal case gql)\nyou can do so by specifying stylers. Plugins will then try to resolve a field or classname\naccording to this style."))}m.isMDXComponent=!0},11748:function(e,t,n){var i={"./locale":89234,"./locale.js":89234};function r(e){var t=s(e);return n(t)}function s(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}r.keys=function(){return Object.keys(i)},r.resolve=s,e.exports=r,r.id=11748}}]);